set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp=~/local/vim/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

"" The following are examples of different formats supported.
"" Keep Plugin commands between vundle#begin/end.
"" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
"" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
"" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
"" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
"" The sparkup vim script is in a subdirectory of this repo called vim.
"" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
"" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}
"
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" Ease window switching
map <C-k> <C-w><Up>
map <C-j> <C-w><Down>
map <C-l> <C-w><Right>
map <C-h> <C-w><Left>

" Function to erase trailing whitespaces
function! RemoveTrailingWhitespaces()
  %s/\s\+$//
endfunction

" Function to get root dir of a project, useful for ctags
function! GetRootDir()
  if executable("git")
    let _root_dir = system("git rev-parse --show-toplevel")
    if shell_error == 0
      return split(_root_dir, "\n")[0]
    endif
  endif
  if executable("hg")
    let _root_dir = system("hg root")
    if shell_error == 0
      return split(_root_dir, "\n")[0]
    endif
  endif
  return "."
endfunction

" Command to launch ctags
map <C-F12> :exec '!ctags --recurse --append --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q -f ~/.vim/tags/tags' GetRootDir() <CR>
set tags+=~/.vim/tags/tags

" Do not use tabs for indenting
set expandtab
" Use 2 spaces for indenting
set shiftwidth=2
