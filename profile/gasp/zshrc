#!/bin/sh
#echo "aldebaran zshrc profile"TH=$PATH:/usr/lib/ccache/
# to put my python before mac's python
PATH=/Users/jfremy/Library/Python/2.7/bin:/usr/local/bin:/Users/jfremy/.local/bin:$PATH
# allow auto-completion from work dir
[ -d ~/work ] && cdpath+=~/work
# qp command
#alias qp="qibuild configure -p with_toolchain_qt && qibuild make -p with_toolchain_qt && qitest run -p with_toolchain_qt && qisrc push --cc cgeiger --cc vpaleologue --cc gschweitzer --cc njauffret --cc abossard --cc gvallat $@"
function qp {
  DIR=$( cd "$( dirname "$0" )" && pwd )
  echo $DIR
  python qp.py $@
}
# qicd
function qicd {
  p=$(python -m 'qicd' $1)
  if [[ $? -ne 0 ]]; then
    return
  fi
  cd ${p}
}

if hash qibuild 2>/dev/null; 
then
  HAS_QIBUILD=1
else
  echo >&2 "I require qibuild but it's not installed. Aborting."
  HAS_QIBUILD=0
fi

if [ $HAS_QIBUILD == 1 ]
then
  function qc {
    qibuild configure -DQI_WITH_TESTS=OFF $@
  }
  function qm {
    qibuild make $@
  }
  function qct {
    qibuild configure $@
  }
fi

function evil_git_dirty {
  [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && echo "*"
}

function evil_git_num_untracked_files {
  expr `git status --porcelain 2>/dev/null| grep "^??" | wc -l`
}

# update function
function qisrc_update_merge_branch
{
  qisrc sync -a
  qisrc foreach -g team/tardis/dev -- git checkout -b team/tardis/merge --track team/origin/tardis/dev
  qisrc foreach -g team/tardis/dev -- git reset --hard origin/team/tardis/dev
  qisrc foreach -g team/tardis/dev -- git push -f gerrit team/tardis/merge
  qisrc foreach -g team/tardis/dev -- git checkout team/tardis/dev
  qisrc foreach -g team/tardis/dev -- git branch -D team/tardis/merge
}

# function reset branch on origin
function grho
{
  branchName=`git rev-parse --abbrev-ref HEAD`
  originBranchName=`git rev-parse --symbolic-full-name @{u}`
  if [[ $originBranchName == *$branchName ]]
  then
    git reset --hard origin/$branchName
  else
    echo >&2 "You surely tried something stupid"
  fi
}

# git aliases: http://githowto.com/aliases
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias go='git checkout '
alias gk='gitk --all&'
alias gx='gitx --all'
alias gg='git gui&'

alias got='git '
alias get='git '


# vim alias
alias vim='vim --noplugin'

# $1 = type; 0 - both, 1 - tab, 2 - title
# rest = text
setTerminalText () {
  # echo works in bash & zsh
  local mode=$1 ; shift
  echo -ne "\033]$mode;$@\007"
}
stt_both  () { setTerminalText 0 $@; }
stt_tab   () { setTerminalText 1 $@; }
stt_title () { setTerminalText 2 $@; }

iterm_create_tab () {
  osascript<<EOD
  tell application "System Events" to tell process "iTerm" to keystroke "t" using command down
EOD
}
iterm_name_current_tab () { 
  osascript<<EOD
  tell application "iTerm" to tell session -1 of current terminal to write text "stt_tab $@"
EOD
}
iterm_split_window () {
  osascript<<EOD
  tell application "System Events" to tell process "iTerm" to keystroke "d" using command down
EOD
}
iterm_go_to_worktree() {
  osascript<<EOD
  tell application "iTerm" to tell session -1 of current terminal to write text "cd $1;qicd $2"
EOD
}

set_up_tab () {
  iterm_create_tab
  iterm_go_to_worktree $1 $2
  firstArg=$1
  firstLetter=${firstArg[1]}
  tabName="$firstLetter/$2"
  iterm_name_current_tab $tabName
  iterm_split_window
  iterm_go_to_worktree $1 $2
  iterm_name_current_tab $tabName
}

