#!/bin/sh
## zshokeys for ctafconf in /ctaf/conf/ctafconf/zsh
##
## Made by Cedric GESTES
## Login   <ctaf42@gmail.com>
##
## Started on  Tue Aug 11 14:51:10 2009 Cedric GESTES
## Last update Sun Oct 18 20:53:00 2009 Cedric GESTES
##
##CTAFCONF


#emacs style
bindkey -e

#example to bind a key to a command (ctrl+t)
bindkey -s '^T' 'uptime\n'

#give all in the history completion : up and down search
# in the history based on the beginning of the line
#Down
bindkey '^[[A' history-beginning-search-backward
#Up
bindkey '^[[B' history-beginning-search-forward

#pageDown
bindkey "^[[6~" down-line-or-history
#pageUp
bindkey "^[[5~" up-line-or-history

autoload run-help
#Ctrl-H (call man)
# On FreeBSD, backspace sends ^H and hence
# run-help gets called...
#
# Disabling for now
#bindkey "^h" run-help
#Ctrl-X W (call which)
bindkey "^xw" which-command

#ctrl-e (edit the current command line with an editor)
autoload edit-command-line && zle -N edit-command-line
bindkey "^xe" edit-command-line


#ctrl-n accept the completion and pass to the next one (usefull to select many files)
bindkey "^n" accept-and-menu-complete
#alt+return
bindkey "\M-^M" accept-and-menu-complete

#zle menu-complete 2>/dev/null
#bindkey -N menuselect
#ctrl-c in completion menu go back just before completion
bindkey -M menuselect "^c" undo
#backspace
#bindkey -M menuselect "^?" undo
#ctrl+z
bindkey -M menuselect "^Z" undo

bindkey -M menuselect "^c" undo


mef() {
  zle undo
  zle undo
  zle undo
  zle undo
#
}
zle -N mef

menu-expand-or-interactive-f() {
  #echo "compstate: $compstate['nmatches']" >> ~/.logg
  #zle list-choices
  #zle menu-expand-or-complete
#   if $compstate['nmatches'] -ge 10 ; then
#     zle list-choices
#   #zle menu-complete
#   #zle menu-expand-or-complete
#   fi
#  zle vi-insert
  #compstate
}

# zle -N menu-expand-or-interactive menu-expand-or-interactive-f
zle -C menu-expand-or-interactive menu-expand-or-complete menu-expand-or-interactive-f
#zle -C menu-expand-or-interactive menu-expand-or-complete toto
#zle -C menu-expand-or-interactive menu-expand-or-complete mef
#zle -C menu-expand-or-interactive menu-expand-or-complete menu-expand-or-interactive-f

bindkey -M menuselect "^I" menu-expand-or-interactive

#can you find what that one does?
#...
#menu-completion will be switched between interactive and normal using tab
#if you want to know more... read the zsh code (Src/Zle/complist.c)
#enjoy!
#bindkey -M menuselect "^I" vi-insert

#this one could be cool too... when pressing tab the cursor is advanced to the
#next char after the unambigous part of the search
#bindkey -M menuselect "^I" menu-expand-or-complete


# bindkey "^h" undo-if-not-isearch
# bindkey "^?" undo-if-not-isearch

# undo-if-not-isearch () {
#  echo lastsearch: -$LASTSEARCH- widget: -$WIDGET- widget: -$LASTWIDGET- cursor: -$CURSOR-
#  echo "sdsd"
#  zle undo
# # zle backward-delete-char
# }

# zle -N undo-if-not-isearch

autoload zcalc
bindkey -s "^xc" 'zcalc\n'

#bindkey "^xi" interactive

# ### Making sure your keyboard will work on any terminal
# bindkey "^[[1~" #beginning-of-line
# bindkey "^[[4~" #end-of-line
# bindkey "^[[2~" #overwrite-mode
# bindkey "^[[3~" #delete-char
# bindkey "^[[6~" #end-of-history
# bindkey "^[[5~" #beginning-of-history
# bindkey "^[^I" #reverse-menu-complete
# bindkey "^[OA" up-line-or-history
# bindkey "^[[A" up-line-or-history
# bindkey "^[[B" down-line-or-history
# bindkey "^[OB" down-line-or-history
# bindkey "^[OD" #backward-char
# bindkey "^[OC" #forward-char
# bindkey "^P"   #history-beginning-search-backward
# bindkey "^N" #history-beginning-search-forward
# bindkey "^[[[A" run-help
# bindkey "^[[[B" #which-command
# bindkey "^[[[C" #where-is
# bindkey "^D" list-choices

