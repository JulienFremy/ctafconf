#!/bin/sh
##
## ct-env
## Login : <ctaf@CTAF-FIX.CTAFLAND>
## Started on  Sat Nov 24 06:18:29 2007 GESTES Cedric
## $Id$
##
## Copyright (C) 2007 GESTES Cedric
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##


action=$1

dir=~/.config/ctafconf/perso/env

. ~/.config/ctafconf/etc/shlib/ssft.sh

#list active file
env_list_active()
{
  local i

  ls $dir 2>/dev/null | grep '.env$' | while read i; do
    echo $i
  done | sed -e "s/.env//" 2>/dev/null;
}

#list all, included sysenv files
env_list()
{
  local i

  ls $dir 2>/dev/null | grep '.env$' | while read i; do
    echo $i
  done | sed -e "s/.env//" 2>/dev/null;

  ls $dir 2>/dev/null | grep '.env.disable$' | while read i; do
    echo $i
  done | sed -e "s/.env.disable//" 2>/dev/null;
}

env_update()
{
  ancIFS=$IFS
  IFS="
"
  ls $dir 2>/dev/null | grep '.env$' | while read i; do
    . $dir/$i
  done;
  ssft_display_message 'ct-env' "your environment have been updated, relaunch your terminal to get your new environment.

Active environment:
`env_list_active`"
  IFS=$ancIFS
}

env_add()
{
  local envname
  SSFT_DEFAULT=
  if ssft_read_string "New environment" "enter the name of the new environment you want to create?"; then
    envname="$SSFT_RESULT"
  fi
  cp ~/.config/ctafconf/etc/mine/env.mine "$dir/$envname.env"
  $EDITOR "$dir/$envname.env"
  env_update
}

env_select()
{
  ancIFS=$IFS
  IFS="
"

  SSFT_DEFAULT=`env_list_active`
  ssft_select_multiple ct-env "enable/disable environment (warning: cancel doesnt work, its the same as OK)
PS: .sys file, are provided by the ctafconf and are update when you call ct-installconf
" `env_list`;


  env_list | while read line; do
    if echo $SSFT_RESULT | grep "^""$line""$" >/dev/null 2>/dev/null; then
      if ! env_test_enable "$line"; then
        env_enable "$line"
      fi
    else
      if ! env_test_disable "$line"; then
        env_disable "$line"
      fi
    fi
  done

  IFS=$ancIFS
  env_update
}

env_test_enable()
{
  [ -f $dir/$@.env ];
}

env_test_disable()
{
  [ -f $dir/$@.env.disable ];
}

env_enable()
{
  local nm=$@
  echo "env enable: $nm";
  mv "$dir/$nm.env.disable" "$dir/$nm.env" >/dev/null 2>/dev/null
}

env_disable()
{
  local nm=$@
  echo "env disable: $nm";
  mv "$dir/$nm.env" "$dir/$nm.env.disable" >/dev/null 2>/dev/null
}

env_edit()
{
  local edenv;
  ancIFS=$IFS
  IFS="
"

  ssft_select_single ct-env "choose the environment you want to edit
PS: .sys environment, are provided by the ctafconf and are update when you call ct-installconf
" `env_list`
  edenv=$SSFT_RESULT
  if [ -f "$dir/$edenv.env" ]; then
    $EDITOR "$dir/$edenv.env";
  elif [ -f "$dir/$edenv.env.disable" ]; then
    $EDITOR "$dir/$edenv.env.disable";

    if ssft_yesno ct-env "$edenv: This environment is disable, do you want to enable it?"; then
      env_enable "$edenv"
    fi
  fi
  IFS=$ancIFS

  env_update
}

if [ "x$action" = "x-h" ] || [ "x$action" = "x--help" ]; then
  echo "usage: ct-env"
  echo "this allow you to have different env at the same time"
  return;
fi;

if [ "x$action" = "x-u" ] || [ "x$action" = "xupdate" ] ; then
  env_list
  return;
fi

if [ x$action = x ]; then
  export SSFT_FRONTEND="console"
else
  export SSFT_FRONTEND="$action"
fi

echo "using mode: $SSFT_FRONTEND, try -h for help about mode, or if that one doesnt work"

while ssft_select_single ct-env "What do you want to do?" "update you environment" "add a new environment" "enable/disable existing environment" "edit existing environment"; do

  if [ "x$SSFT_RESULT" = "xenable/disable existing environment" ]; then
    env_select
  elif [ "x$SSFT_RESULT" = "xupdate you environment" ]; then
    env_update
  elif [ "x$SSFT_RESULT" = "xadd a new environment" ]; then
    env_add
  elif [ "x$SSFT_RESULT" = "xedit existing environment" ]; then
    env_edit
  fi
done;

