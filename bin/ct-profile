#!/bin/sh
## ct-profile.sh for ct-profile in /home/ctaf/.ctafconf/bin
##
## Made by GESTES Cedric
## Login   <ctaf42@gmail.com>
##
## Started on  Sun Sep 25 21:51:34 2005 GESTES Cedric
## Last update Sat Jan  9 03:55:14 2010 Cedric GESTES
##
##CTAFCONF


mode=$1
grkdir=~/.config/ctafconf/etc/grk

#parameter for read
# readparam=""
# echo test_bob | read -e testbob >/dev/null 2>/dev/null;
# if [ x$? = x0 ]; then
#   readparam="-e"
# fi

#we use ssft

#catch a signal, else termcaps shit
_trap_kill ()
{
  echo killing
  exit 0
}
trap _trap_kill INT


. ~/.config/ctafconf/etc/shlib/ssft.sh
. ~/.config/ctafconf/etc/shlib/shelltools.sh sh


#ctafconf user profile file (don't use quote to expand ~)
savefile=~/.config/ctafconf/perso/user-profile
bakfile=~/.config/ctafconf/perso/previous/user-profile

showconf()
{
  echo "name      : $ctafconf_name"
  echo "mail      : $ctafconf_mail"
  echo "zprompt   : $ctafconf_zprompt"
  echo "wm        : $ctafconf_wm"
  echo "backlist  : $ctafconf_backlist"
}

#show the ctafconf
showctafconf ()
{
#  echo "--------------------------------------"
  echo "Your actual configuration:"
  echo "--------------------------------------"
  showconf
  echo "--------------------------------------"
  echo "Do you want to edit this configuration?"
}

#show the new configuration
shownewconf()
{
#  echo "--------------------------------------"
  echo "Your new configuration:"
  echo "--------------------------------------"
  showconf
  echo "--------------------------------------"
  echo "I will backup your previous configuration in .ctafconf/perso/previous/user-profile"
  echo "Save the new configuration?"
}

#save the new configuration
savectafconf()
{
  if [ -f $savefile ]; then
    echo "storing your previous configuration"
    echo -"to: $bakfile-previous"
    rm -rf $bakfile-previous
    mv $savefile $bakfile-previous
  fi
  echo "saving...."
  touch $savefile

  echo "#CTAFCONF user configuration file"              >> $savefile
  echo "#this file is autogenerated by ct-profile"      >> $savefile
  echo "#You can edit this file with: ct-profile"       >> $savefile
  echo ""                                               >> $savefile

  echo "var_set ctafconf_name '$ctafconf_name'"         >> $savefile
  echo "var_set ctafconf_mail '$ctafconf_mail'"         >> $savefile
  echo "var_set ctafconf_zprompt '$ctafconf_zprompt'"   >> $savefile
  echo "var_set ctafconf_wm '$ctafconf_wm'"             >> $savefile
  echo "var_set ctafconf_backlist '$ctafconf_backlist'" >> $savefile

  echo "your new configuration has been saved"
  echo "you should LOGOUT to reload the new configuration"
}

#return val if set, or default
getvaldef()
{
    local val
    local def

    val=$1
    def=$2
    if [ "x$val" = x ] ; then
        echo $def
    else
        echo $val
    fi
}


##START##
if [ -f ~/.config/ctafconf/perso/user-profile ]; then
    . ~/.config/ctafconf/perso/user-profile
fi

if [ x$mode = x-h ] || [ x$mode = x--help ] ; then
  echo "usage: ct-profile [mode]"
  echo "console mode could be: console, dialog, text"
  echo "graphic mode could be: graphic, zenity, kdialog"
  echo "if you have problem with the default mode use text"
  exit 0
fi

if [ x$mode = x ]; then
  export SSFT_FRONTEND="console"
else
  export SSFT_FRONTEND="$mode"
fi

echo "using mode: $SSFT_FRONTEND, try -h for help about mode, or if that one doesnt work"

#export SSFT_FRONTEND=$(getvaldef "$ctafconf_interface" "text")

#echo "using frontend: $SSFT_FRONTEND, you could change it with ct-profile"


if [ -f ~/.config/ctafconf/perso/user-profile ]; then
    SSFT_DEFAULT=no
    if ! ssft_yesno "you already have a configuration file" "`showctafconf`"; then
        #sourced or standalone
        return 2>/dev/null
        exit 0
    fi
fi


SSFT_DEFAULT=$ctafconf_name
if ssft_read_string "Complete Name" "enter your complete Name"; then
    ctafconf_name=$(getvaldef "$SSFT_RESULT" "$ctafconf_name")
fi

SSFT_DEFAULT=$ctafconf_mail
if ssft_read_string "Unix Email" "enter your Email, it will be used in emacs, in new file you create"; then
    ctafconf_mail=$(getvaldef "$SSFT_RESULT" "$ctafconf_mail")
fi

ctafconf_zprompt=$(getvaldef "$ctafconf_zprompt" 'ctaf' )
SSFT_DEFAULT=$ctafconf_zprompt
if ssft_select_single "Zsh prompt" "Choose your zshprompt (another may be available (test with prompt command in zsh)" ctaf adam1 adam2 bart zefram fade redhat suse walters bigfade clint elite elite2 fire off olivier; then
    ctafconf_zprompt=$(getvaldef "$SSFT_RESULT" "$ctafconf_zprompt" )
fi

ctafconf_wm=$(getvaldef "$ctafconf_wm" 'gnome' )
SSFT_DEFAULT=$ctafconf_wm
if ssft_select_single "Window Manager" "Choose your desktop environmment from the list (if you use gdm/kdm this will only change the session named XClient)" random ion3 awesome fluxbox gnome kde xfce4 e16 e17 term aterm; then
    ctafconf_wm=$(getvaldef "$SSFT_RESULT" "$ctafconf_wm" )
fi

ctafconf_backlist=$(getvaldef "$ctafconf_backlist" 'xsession' )
SSFT_DEFAULT=$(echo "$ctafconf_backlist" | sed -e 's/ /\n/');
echo "default: $SSFT_DEFAULT";
msg="Select packages you want to backlist, they will never be installed by the ctafconf"
ssft_select_multiple "Install" \
                     "$msg" \
                     `ls -1 $grkdir | grep ".grk$" | sed -e s/.grk//`

ctafconf_backlist=$(getvaldef "$SSFT_RESULT" "$ctafconf_backlist" )

if ssft_yesno "Save your settings" "`shownewconf`"; then
    savectafconf
fi

